<%- include('./partials/header.ejs') %>

    <div class='p-6' x-data='exportTable'>
        <div class="panel mt-2">
            <div class='flex items-center justify-between mb-3'>
                <h1 class='text-primary text-3xl font-semibold'>Movies</h1>

                <div class="flex flex-wrap items-center">
                    <button type="button" class="p-2 btn btn-primary btn-sm m-1"
                        onclick="window.location='/movies/add'">
                        <i class="ri-add-line mr-1"></i> Add Movie
                    </button>
                    <button type="button" class="p-2 btn btn-primary btn-sm m-1" @click="printTable">
                        <i class="ri-printer-line mr-1"></i> PRINT
                    </button>
                    <button type="button" class="p-2 btn btn-primary btn-sm m-1" @click="exportTable('csv')">
                        <i class="ri-file-line mr-1"></i> CSV
                    </button>
                </div>
            </div>
            <table id="myTable" class="table-hover whitespace-nowrap"></table>
        </div>
    </div>

    <script>
        window.onload = checkCookies();
        function getActions(id, name) {
            return `
                <ul class="flex items-center gap-4">
                    <li>
                        <a href="/movies/view/${id}" class='text-xl' x-tooltip="View">
                            <i class="ri-eye-line text-primary"></i>
                        </a>
                    </li>
                    <li>
                        <a href="/movies/edit/${id}" class='text-xl' x-tooltip="Edit">
                            <i class="ri-pencil-line text text-success"></i>
                        </a>
                    </li>
                    <li>
                        <a href="#" class='text-xl' x-tooltip="Delete" onclick="showAlert('${id}', '${name}')">
                            <i class="ri-delete-bin-line text-danger"></i>
                        </a>
                    </li>
                </ul>`;
        }

        async function showAlert(id, name) {
            new window.Swal({
                title: 'Are you sure?',
                text: `You want to delete Movie :- ${name}`,
                showCancelButton: true,
                confirmButtonText: 'Delete',
                padding: '2em',
            })
                .then((result) => {
                    if (result.isConfirmed) {
                        var loc = `/movies/delete/${id}`;
                        window.location = loc;
                    }
                });
        }

        document.addEventListener("alpine:init", () => {
            Alpine.data('exportTable', () => ({
                datatable: null,
                init() {
                    fetch("/movies/get-movies")
                    .then(res => res.json())
                    .then(data => {
                        const tableData = data.map((movie, idx)=>[
                            idx + 1,
                            movie.title,
                            movie.description,
                            movie.ratings,
                            movie.genere,
                            `<img src="/assets/images/movie-images/${movie.image}" alt="${movie.title}" width="100" />`,
                            `<video width="100" autoplay>
                                <source src="/assets/images/movie-images/${movie.video}" type="video/mp4">
                            </video>`,
                            `${movie.release_date}`,
                            getActions(movie._id, `${movie.title}`),
                        ])

                        this.datatable = new simpleDatatables.DataTable('#myTable', {
                            data: {
                                headings: ['Sr.No.', 'Title', 'Description', 'Ratings', 'Genere', 'Cover', 'Video', 'Release Date', 'Action'],
                                data: tableData,
                            },
                            perPage: 10,
                            perPageSelect: [10, 20, 30, 50, 100],
                            columns: [{
                                select: 0,
                                sort: 'asc',
                            },
                            ],
                            firstLast: true,
                            firstText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"> <path d="M13 19L7 12L13 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/> <path opacity="0.5" d="M16.9998 19L10.9998 12L16.9998 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/> </svg>',
                            lastText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"> <path d="M11 19L17 12L11 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/> <path opacity="0.5" d="M6.99976 19L12.9998 12L6.99976 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/> </svg>',
                            prevText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"> <path d="M15 5L9 12L15 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/> </svg>',
                            nextText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"> <path d="M9 5L15 12L9 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/> </svg>',
                            labels: {
                                perPage: '{select}',
                            },
                            layout: {
                                top: '{search}',
                                bottom: '{info}{select}{pager}',
                            },
                        })
                    })
                },

                exportTable(eType) {
                    var data = {
                        type: eType,
                        filename: 'movies',
                        download: true,
                    };

                    if (data.type === 'csv') {
                        data.lineDelimiter = '\n';
                        data.columnDelimiter = ';';
                    }
                    this.datatable.export(data);
                },

                printTable() {
                    this.datatable.print();
                },

                formatDate(date) {
                    if (date) {
                        const dt = new Date(date);
                        const month = dt.getMonth() + 1 < 10 ? '0' + (dt.getMonth() + 1) : dt.getMonth() +
                            1;
                        const day = dt.getDate() < 10 ? '0' + dt.getDate() : dt.getDate();
                        return day + '/' + month + '/' + dt.getFullYear();
                    }
                    return '';
                },
            }));
        })
    </script>

    <%- include('./partials/footer.ejs') %>